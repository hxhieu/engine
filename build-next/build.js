const argv = require('yargs').argv;

const concatentateShaders = require('./tasks/concatenateShaders')
const concatenateSourceFiles = require('./tasks/concatenateSourceFiles')
const preprocess = require('./tasks/preprocess');

async function run () {
    try {
        await concatentateShaders();
        const src = await preprocess(["DEBUG"]);
        const result = await concatenateSourceFiles(src);
         // Triggers esbuild, just use its minification
        require("esbuild").build({
            stdio: "inherit",
            entryPoints: [result[0]],
            outfile: argv.o,
            minify: argv.l,
            bundle: false
        });
    }
    catch (ex){
        console.error(ex);
    }
};

run();

// var CONCAT_SRC_FILE = "src.js";

// if (fs.existsSync(CONCAT_SRC_FILE)) {
//     fs.unlinkSync(CONCAT_SRC_FILE);
// }

// // load shader chunks and combine into single javascript file
// var concatentateShaders = function (callback) {
//     var output = '../src/graphics/program-lib/chunks/generated-shader-chunks.js';
//     var dir = '../src/graphics/program-lib/chunks/';

//     var fd = fs.openSync(output, 'w');

//     fs.writeSync(fd, "// autogenerated at: " + new Date() + "\n");
//     fs.readdir(dir, function (err, files) {
//         files.forEach(function (file) {
//             var ext = null;
//             ext = file.endsWith(".vert") ? "VS" : ext;
//             ext = file.endsWith(".frag") ? "PS" : ext;
//             if (ext) {
//                 var fullpath = dir + file;

//                 var content = fs.readFileSync(fullpath).toString().replace(new RegExp("[\\r\\n]+", "g"), "\\n");
//                 var name = file.split(".")[0] + ext;
//                 var data = util.format('pc.shaderChunks.%s = "%s";\n', name, content);
//                 fs.writeSync(fd, data);
//             }
//         });

//         callback();
//     });
// };

// concatentateShaders(function (){
//     // Concatenate source files, read from "../build/dependencies.txt"
//     fs.readFileSync("../build/dependencies.txt", "utf-8")
//         .split(os.EOL)
//         .forEach(function (srcFile) {
//             if (srcFile) {
//                 fs.appendFileSync(CONCAT_SRC_FILE, "// " + srcFile + '\n');
//                 var script = fs.readFileSync(path.resolve(srcFile));
//                 fs.appendFileSync(CONCAT_SRC_FILE, script);
//             }
//         });

//     // Triggers esbuild, just use its minification
//     require("esbuild").build({
//         stdio: "inherit",
//         entryPoints: [CONCAT_SRC_FILE],
//         outfile: argv.o,
//         minify: argv.l,
//         bundle: false
//     });
// });
